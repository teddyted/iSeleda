/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pixelitor;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import javax.swing.ImageIcon;

/**
 *
 * @author teddyted
 */
public class numbersDictionary extends javax.swing.JFrame {

    /**
     * Creates new form numbersDictionary
     */
    public numbersDictionary() {
        initComponents();
        FillWordDictLict();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jMainImage = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jImportButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Numbers حاجب");
        setBackground(new java.awt.Color(255, 255, 0));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(204, 0, 51));
        jPanel1.setMaximumSize(new java.awt.Dimension(460, 460));
        jPanel1.setOpaque(false);
        jPanel1.setPreferredSize(new java.awt.Dimension(460, 460));

        jTextField1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextField1.setDragEnabled(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSearchActionPerformed(evt);
            }
        });

        jTextPane1.setEditable(false);
        jTextPane1.setText(" Numbers رمز");
        jScrollPane2.setViewportView(jTextPane1);

        jButton1.setText("Main Graphic اندهش");
        jButton1.setActionCommand("MainGraphic");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Sign Graphic فجأة - فوجئ");
        jButton2.setActionCommand("Sign Graphic");

        jMainImage.setText("imagePlaceholder");

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jList1);

        jImportButton.setText("Import");
        jImportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jImportButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                    .addComponent(jTextField1))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jMainImage, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jImportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105)
                        .addComponent(jMainImage, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jImportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton1))
                        .addGap(25, 25, 25))))
        );

        jButton1.getAccessibleContext().setAccessibleName("Main Graphic");
        jButton2.getAccessibleContext().setAccessibleName("Sign Graphic");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jPanel1, gridBagConstraints);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/IDCRTT/dictionary.png"))); // NOI18N
        jLabel2.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jLabel2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jSearchActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jList1MouseClicked

    private void jImportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jImportButtonActionPerformed
        
    }//GEN-LAST:event_jImportButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(numbersDictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(numbersDictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(numbersDictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(numbersDictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new numbersDictionary().setVisible(true);

            }
        });
        

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    public javax.swing.JButton jImportButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JLabel jMainImage;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables


    /* TED MSL DICT */
    //App Icon (Task Bar)
////	public static ImageIcon ico = new ImageIcon(Main.class.getResource("/images/Dictionary_ico.png"));
	
	//From the new dictStem :	AR/EN/File/Polysemy/Chararcters
	public static ArrayList<WordDict> wordDictList = new ArrayList<>();

	//Dictionary Variable
	public static String DictStem =  "/Users/teddyted/NetBeansProjects/MSL_APP/Code/Dictionary/src/includes/dictStem_AR.txt"; 
//	System.out.println( "JRE Version :" + System.getProperty( "java.runtime.version" ) );
//        System.out.println( "JVM Bit size: " + System.getProperty( "sun.arch.data.model" ) );
	//Mulimedia Library
    	public static String DictSign = "/Users/teddyted/NetBeansProjects/MSL_APP/Code/Dictionary/src/tedlib/images/dictSign"; // C:/signs/images/dictSign";
	public static String Signs = "/Users/teddyted/NetBeansProjects/MSL_APP/Code/Dictionary/src/tedlib/images/signs"; //C:/signs/images/signs";
	public static String CatFiles = "/Users/teddyted/NetBeansProjects/MSL_APP/Code/Dictionary/src/tedlib/dict/category"; // C:/signs/dict/category/";	//Categories Files.
	public static String CatSign = "/Users/teddyted/NetBeansProjects/MSL_APP/Code/Dictionary/src/tedlib/dict/category/Categ_icons"; // "C:/signs/dict/category/Categ_icons";	//Categories signs.
	
	public static String BigVideo = "/Users/teddyted/NetBeansProjects/MSL_APP/Code/Dictionary/src/tedlib/videos/bigVideo"; // "C:\\signs\\videos\\bigVideo";
	public static String BigVideoSon = "/Users/teddyted/NetBeansProjects/MSL_APP/Code/Dictionary/src/tedlib/videos/bigVideoSon";// "C:\\signs\\videos\\bigVideoSon";
	public static String ShortVideo = "/Users/teddyted/NetBeansProjects/MSL_APP/Code/Dictionary/src/tedlib/videos/shortVideo"; // "C:\\signs\\videos\\shortVideo";
	public static String Audio = "/Users/teddyted/NetBeansProjects/MSL_APP/Code/Dictionary/src/tedlib/audio"; // C:\\signs\\audio";
	
	//Order : AR/EN/File/Polysemy/Chararcters
	public static void FillWordDictLict(){
		System.out.println("Start Reading Dictionary ...");
		try {
			InputStreamReader in = new InputStreamReader(new FileInputStream(numbersDictionary.DictStem), "UTF-8");
			BufferedReader buff = new BufferedReader(in);
			String line = "";
			String tab [] = new String[5];

			while((line = buff.readLine()) != null){
				WordDict word = new WordDict();
				tab = line.split("\t");

				//Specifying the Arabic word
				word.setWord_AR(tab[0]);

				//Specifying the corresponding English translation :
				word.setWord_EN(tab[1].substring(1, tab[1].length()-1));

				//Specifying the corresponding file
				if(tab[2].equals("[]")){
					if(tab[4].equals("[]")){
						word.setFile(tab[0]);
					}else{
						word.setFile(tab[0].trim()+" ("+tab[4].substring(1, tab[4].length()-1).trim()+")");
					}
				}else{
					word.setFile(tab[2].substring(1, tab[2].length()-1));
				}

				//Specifying the corresponding Characteristic 
				word.setCharacter(tab[4].substring(1, tab[4].length()-1));

				//Specifying the corresponding Polysemy 
				if(! tab[3].equals("[]")){
					String polysemy[] = tab[3].substring(1, tab[3].length()-1).split("/");
					for (int i = 0; i < polysemy.length; i++) {
						word.addPolysemy(polysemy[i]);
					}
				}

				wordDictList.add(word);
                                System.out.println(">>"+word+"<<");
			}

		} catch (IOException e) {
			e.printStackTrace();
		}
                System.out.println(wordDictList);
		System.out.println("End Reading Dictionary.");
	}

}
